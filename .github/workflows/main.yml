#name: Java CI with Gradle and deploy to heroku

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test --watchAll=false --passWithNoTests
          
  build-docker-image:
    name: Build docker image
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ secrets.AWS_CONTAINER_REGISTRY }}:integration

    - name: Push to ECR
      id: ecr
      uses: jwalton/gh-ecr-push@v1
      with:
        access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: ${{ secrets.AWS_REGION }}
        image: ${{ secrets.AWS_CONTAINER_REGISTRY }}:integration
    
        
  deploy-to-staging:
    environment: staging
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: pull from ecr
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ secrets.AWS_REGION }}
          image: ${{ secrets.AWS_CONTAINER_REGISTRY }}:integration
          local-image: ${{ secrets.AWS_CONTAINER_REGISTRY }}:integration
          direction: pull
      - name: Push to ECR
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ secrets.AWS_REGION }}
          local-image: ${{ secrets.AWS_CONTAINER_REGISTRY }}:integration
          image: ${{ secrets.AWS_CONTAINER_REGISTRY }}:staging

  deploy-to-production:
    environment: production
    needs: deploy-to-staging
    runs-on: ubuntu-latest
    steps:
      - name: pull from ecr
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ secrets.AWS_REGION }}
          image: ${{ secrets.AWS_CONTAINER_REGISTRY }}:staging
          local-image: ${{ secrets.AWS_CONTAINER_REGISTRY }}:staging
          direction: pull
      - name: Push to ECR
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ secrets.AWS_REGION }}
          local-image: ${{ secrets.AWS_CONTAINER_REGISTRY }}:staging
          image: ${{ secrets.AWS_CONTAINER_REGISTRY }}:production
